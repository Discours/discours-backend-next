type Query {
  # author
  get_author(slug: String, author_id: Int): Author
  get_author_id(user: String!): Author
  get_authors_all: [Author]
  get_author_followers(slug: String, user: String, author_id: Int): [Author]
  get_author_followed(slug: String, user: String, author_id: Int): [Author]
  load_authors_by(by: AuthorsBy!, limit: Int, offset: Int): [Author]

  # community
  get_community: Community
  get_communities_all: [Community]

  # editor
  get_shouts_drafts: [Shout]

  # follower
  get_my_followed: CommonResult! # { authors topics communities }
  get_shout_followers(slug: String, shout_id: Int): [Author]

  # reaction
  load_reactions_by(by: ReactionBy!, limit: Int, offset: Int): [Reaction]

  # reader
  get_shout(slug: String, shout_id: Int): Shout
  load_shouts_followed(follower_id: Int!, limit: Int, offset: Int): [Shout] # userReactedShouts
  load_shouts_by(options: LoadShoutsOptions): [Shout]
  load_shouts_search(text: String!, limit: Int, offset: Int): [SearchResult]
  load_shouts_feed(options: LoadShoutsOptions): [Shout]
  load_shouts_unrated(limit: Int, offset: Int): [Shout]
  load_shouts_random_top(options: LoadShoutsOptions): [Shout]
  load_shouts_random_topic(limit: Int!): Result!  # { topic shouts }
  load_shouts_drafts: [Shout]

  # topic
  get_topic(slug: String!): Topic
  get_topics_all: [Topic]
  get_topics_random(amount: Int): [Topic]
  get_topics_by_author(slug: String, user: String, author_id: Int): [Topic]
  get_topics_by_community(slug: String, community_id: Int): [Topic]
}
